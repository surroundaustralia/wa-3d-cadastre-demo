{
  "title": "Validation report for ogc.bbr.template.mySchema - My Schema",
  "bblockName": "My Schema",
  "bblockId": "ogc.bbr.template.mySchema",
  "generated": "2024-07-22T05:23:58.694894+00:00",
  "result": true,
  "items": [
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/mySchema/tests/rules-fail.json",
        "url": "https://raw.githubusercontent.com/surroundaustralia/wa-3d-cadastre-demo/master/_sources/mySchema/tests/rules-fail.json",
        "language": "json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using rules-fail.json from test resources"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "rules-fail.jsonld",
              "isError": false,
              "message": "Output JSON-LD rules-fail.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "rules-fail.ttl",
              "size": 3,
              "isError": false,
              "message": "Output Turtle rules-fail.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": []
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": []
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/mySchema/rules.shacl",
              "graph": "@prefix mynamespace: <http://example.org/ns1/> .\n@prefix ns1: <https://example.org/my-bb-model/> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode [ a mynamespace:aThing ;\n                    ns1:b 23 ;\n                    ns1:c 2.55e+01 ] ;\n            sh:resultMessage \"Value of [ ns1:b Literal(\\\"23\\\", datatype=xsd:integer) ; ns1:c Literal(\\\"25.5\\\", datatype=xsd:double) ; rdf:type mynamespace:aThing ]->ns1:b <= Literal(\\\"25.5\\\", datatype=xsd:double)\" ;\n            sh:resultPath ns1:c ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraintComponent sh:LessThanConstraintComponent ;\n            sh:sourceShape [ sh:lessThan ns1:b ;\n                    sh:path ns1:c ] ;\n            sh:value 2.55e+01 ] .\n\n",
              "isError": true,
              "message": "Validation result for _sources/mySchema/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in LessThanConstraintComponent (http://www.w3.org/ns/shacl#LessThanConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: [ sh:lessThan ns1:b ; sh:path ns1:c ]\n  \tFocus Node: [ ns1:b Literal(\"23\", datatype=xsd:integer) ; ns1:c Literal(\"25.5\", datatype=xsd:double) ; rdf:type mynamespace:aThing ]\n  \tValue Node: Literal(\"25.5\", datatype=xsd:double)\n  \tResult Path: ns1:c\n  \tMessage: Value of [ ns1:b Literal(\"23\", datatype=xsd:integer) ; ns1:c Literal(\"25.5\", datatype=xsd:double) ; rdf:type mynamespace:aThing ]->ns1:b <= Literal(\"25.5\", datatype=xsd:double)\n  "
            },
            {
              "shaclFile": "_sources/mySchema/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/template/#testValues>": {
                  "nodes": [
                    "_:Nb8b6d599820f4d948a9acd30772901ba"
                  ]
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/mySchema/rules.shacl:\n - Shape <https://www.ogc.org/rules/template/#testValues>: _:Nb8b6d599820f4d948a9acd30772901ba\n"
            }
          ]
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": []
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/bbr/template/mySchema/example_1_1.json",
        "url": "https://raw.githubusercontent.com/surroundaustralia/wa-3d-cadastre-demo/master/build/tests/bbr/template/mySchema/example_1_1.json",
        "exampleIndex": 1,
        "snippetIndex": 1,
        "language": "json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": []
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_1_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_1_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_1_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_1_1.ttl",
              "size": 3,
              "isError": false,
              "message": "Output Turtle example_1_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": []
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": []
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/mySchema/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/mySchema/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/mySchema/rules.shacl",
              "focusNodes": {
                "<https://www.ogc.org/rules/template/#testValues>": {
                  "nodes": [
                    "_:N813c399ffba245f3b7186bd9f6777aab"
                  ]
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/mySchema/rules.shacl:\n - Shape <https://www.ogc.org/rules/template/#testValues>: _:N813c399ffba245f3b7186bd9f6777aab\n"
            }
          ]
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": []
        }
      ]
    }
  ],
  "globalErrors": {},
  "counts": {
    "total": 2,
    "passed": 2,
    "failed": 0
  }
}